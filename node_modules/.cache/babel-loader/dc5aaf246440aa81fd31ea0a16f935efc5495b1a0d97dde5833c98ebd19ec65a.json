{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'BuildingBuildView',\n  props: {\n    buildingApartments: {\n      type: Array,\n      required: true\n    }\n  },\n  computed: {\n    sortedApartments() {\n      return this.buildingApartments.slice().sort((a, b) => a.id - b.id).map(apartment => {\n        const sortedFloors = apartment.floors.slice().sort((floorA, floorB) => floorA.number - floorB.number);\n        return {\n          ...apartment,\n          sortedFloors\n        };\n      });\n    }\n  },\n  methods: {\n    isUserApartment(apartmentId) {\n      const userId = this.$store.getters.getUserId;\n      const promise = axios.get('http://localhost:8080/api/data/apartments/getApartmentsByUserId/' + userId, {\n        headers: {\n          \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n        }\n      });\n      promise.then(response => {\n        if (response.data == null || response.data === undefined) {\n          return false;\n        }\n        let userApartments = response.data;\n        let userApartmentIds = userApartments.map(x => x.id);\n        let result = userApartmentIds.includes(apartmentId);\n        console.log(result);\n        return result;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","buildingApartments","type","Array","required","computed","sortedApartments","slice","sort","a","b","id","map","apartment","sortedFloors","floors","floorA","floorB","number","methods","isUserApartment","apartmentId","userId","$store","getters","getUserId","promise","get","headers","getAccessToken","then","response","data","undefined","userApartments","userApartmentIds","x","result","includes","console","log"],"sources":["C:\\Users\\admin\\source\\repos\\COMMAND\\CPP_Lab08\\src\\components\\Builds\\BuildingBuildView.vue"],"sourcesContent":["<template>\r\n    <div class=\"building-scheme\">\r\n        <div id=\"app\">\r\n\r\n            <div v-for=\"apartment in sortedApartments\" :key=\"apartment.name\"\r\n                :class=\"{ 'user-apartment': isUserApartment(apartment.id) }\" class=\"apartment\">\r\n                <label>Apartment</label>\r\n                <div v-for=\"floor in apartment.floors\" :key=\"floor.number\" class=\"floor\">\r\n                    <label>Floor {{ isUserApartment(apartment.id) }}</label>\r\n                    <br />\r\n                    <div v-for=\"room in floor.rooms\" :key=\"room.name\" class=\"room\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'BuildingBuildView',\r\n    props: {\r\n        buildingApartments: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        sortedApartments() {\r\n            return this.buildingApartments.slice().sort((a, b) => a.id - b.id).map(apartment => {\r\n                const sortedFloors = apartment.floors.slice().sort((floorA, floorB) => floorA.number - floorB.number);\r\n                return { ...apartment, sortedFloors };\r\n            });\r\n        },\r\n    },\r\n    methods: {\r\n        isUserApartment(apartmentId) {\r\n            const userId = this.$store.getters.getUserId;\r\n            const promise = axios.get('http://localhost:8080/api/data/apartments/getApartmentsByUserId/' + userId,\r\n                {\r\n                    headers:\r\n                    {\r\n                        \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\r\n                    }\r\n                });\r\n\r\n            promise.then((response) => {\r\n                if (response.data == null || response.data === undefined) {\r\n                    return false;\r\n                }\r\n\r\n                let userApartments = response.data;\r\n                let userApartmentIds = userApartments.map(x => x.id);\r\n                let result = userApartmentIds.includes(apartmentId);\r\n                \r\n                                console.log(result);\r\n\r\n                return result;\r\n            });\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.apartment {\r\n    background-color: rgb(14, 88, 44);\r\n    margin-right: 20px;\r\n    margin-bottom: 10%;\r\n    color: azure;\r\n}\r\n\r\n.user-apartment {\r\n    background-color: rgb(179, 20, 20) !important;\r\n}\r\n\r\n.apartment label {\r\n    width: 15%;\r\n}\r\n\r\n.floor {\r\n    background-color: rgb(37, 37, 37);\r\n    border: 5px solid rgb(206, 103, 0);\r\n    color: azure;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 15vh;\r\n}\r\n\r\n.room {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: rgb(201, 201, 201);\r\n    border: 1px solid #ccc;\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n    flex-grow: 1;\r\n    height: 12vh;\r\n}\r\n\r\n.window {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: lightblue;\r\n    border: 1px solid #ccc;\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n}\r\n</style>"],"mappings":"AAkBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACHC,kBAAkB,EAAE;MAChBC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,gBAAgBA,CAAA,EAAG;MACf,OAAO,IAAI,CAACL,kBAAkB,CAACM,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAC,GAAID,CAAC,CAACC,EAAE,CAAC,CAACC,GAAG,CAACC,SAAQ,IAAK;QAChF,MAAMC,YAAW,GAAID,SAAS,CAACE,MAAM,CAACR,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACQ,MAAM,EAAEC,MAAM,KAAKD,MAAM,CAACE,MAAK,GAAID,MAAM,CAACC,MAAM,CAAC;QACrG,OAAO;UAAE,GAAGL,SAAS;UAAEC;QAAa,CAAC;MACzC,CAAC,CAAC;IACN;EACJ,CAAC;EACDK,OAAO,EAAE;IACLC,eAAeA,CAACC,WAAW,EAAE;MACzB,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,SAAS;MAC5C,MAAMC,OAAM,GAAI5B,KAAK,CAAC6B,GAAG,CAAC,kEAAiE,GAAIL,MAAM,EACjG;QACIM,OAAO,EACP;UACI,eAAe,EAAG,UAAS,IAAI,CAACL,MAAM,CAACC,OAAO,CAACK,cAAe;QAClE;MACJ,CAAC,CAAC;MAENH,OAAO,CAACI,IAAI,CAAEC,QAAQ,IAAK;QACvB,IAAIA,QAAQ,CAACC,IAAG,IAAK,IAAG,IAAKD,QAAQ,CAACC,IAAG,KAAMC,SAAS,EAAE;UACtD,OAAO,KAAK;QAChB;QAEA,IAAIC,cAAa,GAAIH,QAAQ,CAACC,IAAI;QAClC,IAAIG,gBAAe,GAAID,cAAc,CAACtB,GAAG,CAACwB,CAAA,IAAKA,CAAC,CAACzB,EAAE,CAAC;QACpD,IAAI0B,MAAK,GAAIF,gBAAgB,CAACG,QAAQ,CAACjB,WAAW,CAAC;QAEnCkB,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;QAEnC,OAAOA,MAAM;MACjB,CAAC,CAAC;IACN;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}