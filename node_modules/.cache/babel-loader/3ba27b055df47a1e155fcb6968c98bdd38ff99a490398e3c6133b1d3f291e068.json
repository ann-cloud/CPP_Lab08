{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f5c97a5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"building-scheme\"\n};\nconst _hoisted_2 = {\n  id: \"app\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Apartment\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedApartments, apartment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: apartment.name,\n      class: \"apartment\"\n    }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(apartment.sortedFloors, floor => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: floor.number,\n        class: \"floor\"\n      }, [_createElementVNode(\"label\", null, \"Floor \" + _toDisplayString(floor.number), 1 /* TEXT */), _hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(floor.rooms, room => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: room.name,\n          class: \"room\"\n        });\n      }), 128 /* KEYED_FRAGMENT */))]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$options","sortedApartments","apartment","key","name","_hoisted_3","sortedFloors","floor","number","_toDisplayString","_hoisted_4","rooms","room"],"sources":["C:\\Users\\admin\\source\\repos\\COMMAND\\CPP_Lab08\\src\\components\\Builds\\BuildingBuildView.vue"],"sourcesContent":["<template>\r\n    <div class=\"building-scheme\">\r\n        <div id=\"app\">\r\n\r\n            <div v-for=\"apartment in sortedApartments\" :key=\"apartment.name\" class=\"apartment\">\r\n                <label>Apartment</label>\r\n                <div v-for=\"floor in apartment.sortedFloors\" :key=\"floor.number\" class=\"floor\">\r\n                    <label>Floor {{ floor.number }}</label>\r\n                    <br />\r\n                    <div v-for=\"room in floor.rooms\" :key=\"room.name\" class=\"room\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios';\r\n\r\nexport default {\r\n    name: 'BuildingBuildView',\r\n    props: {\r\n        buildingApartments: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n    },\r\n    computed: {\r\n        sortedApartments() {\r\n\r\n            var apartmentsSortedFloors = this.buildingApartments.slice().map(apartment => {\r\n                const sortedFloors = apartment.floors.slice().sort((floorA, floorB) => floorB.number - floorA.number);\r\n                const userId = this.$store.getters.getUserId;\r\n                const promise = axios.get('http://localhost:8080/api/data/apartments/getApartmentsByUserId/' + userId,\r\n                    {\r\n                        headers:\r\n                        {\r\n                            \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\r\n                        }\r\n                    });\r\n\r\n                promise.then((response) => {\r\n                    let userApartments = response.data;\r\n                    let isUserSAppatrment = userApartments.includes(apartment.id);\r\n                    return { ...apartment, sortedFloors };\r\n                })\r\n            });\r\n\r\n            console.log(apartmentsSortedFloors);\r\n\r\n            return apartmentsSortedFloors;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.apartment {\r\n    background-color: rgb(14, 88, 44);\r\n    margin-right: 20px;\r\n    margin-bottom: 10%;\r\n    color: azure;\r\n}\r\n\r\n.user-apartment {\r\n    background-color: rgb(179, 20, 20) !important;\r\n}\r\n\r\n.apartment label {\r\n    width: 15%;\r\n}\r\n\r\n.floor {\r\n    background-color: rgb(37, 37, 37);\r\n    border: 5px solid rgb(206, 103, 0);\r\n    color: azure;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 15vh;\r\n}\r\n\r\n.room {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: rgb(201, 201, 201);\r\n    border: 1px solid #ccc;\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n    flex-grow: 1;\r\n    height: 12vh;\r\n}\r\n\r\n.window {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: lightblue;\r\n    border: 1px solid #ccc;\r\n    margin-right: 10px;\r\n    display: inline-block;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAiB;;EACnBC,EAAE,EAAC;AAAK;gEAGLC,mBAAA,CAAwB,eAAjB,WAAS;gEAGZA,mBAAA,CAAM;;;uBAPtBC,mBAAA,CAYM,OAZNC,UAYM,GAXFF,mBAAA,CAUM,OAVNG,UAUM,I,kBARFF,mBAAA,CAOMG,SAAA,QAAAC,WAAA,CAPmBC,QAAA,CAAAC,gBAAgB,EAA7BC,SAAS;yBAArBP,mBAAA,CAOM;MAPsCQ,GAAG,EAAED,SAAS,CAACE,IAAI;MAAEZ,KAAK,EAAC;QACnEa,UAAwB,G,kBACxBV,mBAAA,CAIMG,SAAA,QAAAC,WAAA,CAJeG,SAAS,CAACI,YAAY,EAA/BC,KAAK;2BAAjBZ,mBAAA,CAIM;QAJwCQ,GAAG,EAAEI,KAAK,CAACC,MAAM;QAAEhB,KAAK,EAAC;UACnEE,mBAAA,CAAuC,eAAhC,QAAM,GAAAe,gBAAA,CAAGF,KAAK,CAACC,MAAM,kBAC5BE,UAAM,G,kBACNf,mBAAA,CAAqEG,SAAA,QAAAC,WAAA,CAAjDQ,KAAK,CAACI,KAAK,EAAnBC,IAAI;6BAAhBjB,mBAAA,CAAqE;UAAnCQ,GAAG,EAAES,IAAI,CAACR,IAAI;UAAEZ,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}