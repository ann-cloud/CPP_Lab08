{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-67ce2dd8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"message-type\"\n};\nconst _hoisted_2 = {\n  class: \"message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"message-popup\", $options.messageTypeClass])\n  }, [_createElementVNode(\"div\", _hoisted_1, _toDisplayString($data.messageType.toUpperCase()), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closePopup && $options.closePopup(...args)),\n    class: \"close-button\"\n  }, \"×\"), _createElementVNode(\"div\", _hoisted_2, _toDisplayString($data.message), 1 /* TEXT */)], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","$data","isVisible","_createElementBlock","_normalizeClass","$options","messageTypeClass","_createElementVNode","_hoisted_1","_toDisplayString","messageType","toUpperCase","onClick","_cache","args","closePopup","_hoisted_2","message"],"sources":["C:\\Users\\admin\\source\\repos\\COMMAND\\CPP_Lab08\\src\\components\\Simulation\\AlertPopup.vue"],"sourcesContent":["<template>\n    <div v-if=\"isVisible\" class=\"message-popup\" :class=\"messageTypeClass\">\n    <div class=\"message-type\">{{ messageType.toUpperCase() }}</div>\n    <button @click=\"closePopup\" class=\"close-button\">×</button>\n    <div class=\"message\">{{ message }}</div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        isVisible: false,\n        message: '',\n        messageType: 'info', // 'info', 'success', 'warning', 'error'\n      };\n    },\n    computed: {\n      messageTypeClass() {\n        return `message-${this.messageType}`;\n      },\n    },\n    methods: {\n      showMessage(message, type = 'info') {\n        this.message = message;\n        this.messageType = type;\n        this.isVisible = true;\n  \n        setTimeout(() => {\n          this.closePopup();\n        }, 5000);\n      },\n      closePopup() {\n        this.isVisible = false;\n        this.message = '';\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n\n  .message-type\n  {\n    font-weight: bold;\n  }\n  .message-popup {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    background-color: #fff;\n    border: 1px solid #ccc;\n    padding: 10px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    width: 300px;\n    height: 100px;\n    max-width: 300px;\n    z-index: 5;\n  }\n  \n  .message-info {\n    background-color: #3b9fe2b6;\n    color: #fff;\n  }\n  \n  .message-success {\n    background-color: #5cb85cb1;\n    color: #fff;\n  }\n  \n  .message-warning {\n    background-color: #f2ec38b4;\n    color: #000000;\n  }\n  \n  .message-error {\n    background-color: #e74d3ca3;\n    color: #fff;\n  }\n  \n  .close-button {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    border: none;\n    background: none;\n    cursor: pointer;\n    font-size: 20px;\n    color: #000000;\n  }\n  </style>\n  "],"mappings":";;;EAESA,KAAK,EAAC;AAAc;;EAEpBA,KAAK,EAAC;AAAS;;SAHTC,KAAA,CAAAC,SAAS,I,cAApBC,mBAAA,CAIM;;IAJgBH,KAAK,EAAAI,eAAA,EAAC,eAAe,EAASC,QAAA,CAAAC,gBAAgB;MACpEC,mBAAA,CAA+D,OAA/DC,UAA+D,EAAAC,gBAAA,CAAlCR,KAAA,CAAAS,WAAW,CAACC,WAAW,oBACpDJ,mBAAA,CAA2D;IAAlDK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,QAAA,CAAAU,UAAA,IAAAV,QAAA,CAAAU,UAAA,IAAAD,IAAA,CAAU;IAAEd,KAAK,EAAC;KAAe,GAAC,GAClDO,mBAAA,CAAwC,OAAxCS,UAAwC,EAAAP,gBAAA,CAAhBR,KAAA,CAAAgB,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}