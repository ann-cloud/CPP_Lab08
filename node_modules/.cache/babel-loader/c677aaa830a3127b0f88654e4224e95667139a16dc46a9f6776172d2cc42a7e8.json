{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport { createRouter, createWebHashHistory } from 'vue-router';\nimport store from './store';\nimport ModalLogin from '@/./components/Authorization/ModalLogin.vue';\nimport ModalRegister from '@/./components/Authorization/ModalRegister.vue';\nimport HomeContent from '@/./components/Home/HomeContent.vue';\nimport ProfileContent from '@/./components/Profile/ProfileContent.vue';\nconst routes = [{\n  path: '/',\n  component: HomeContent\n}, {\n  path: '/sign-in',\n  component: ModalLogin\n}, {\n  path: '/sign-up',\n  component: ModalRegister\n}, {\n  path: '/profile',\n  component: ProfileContent,\n  meta: {\n    requiresAuth: true\n  },\n  beforeEnter: (to, from, next) => {\n    if (store.getters.isAuthenticated) {\n      let accessToken = store.getters.getAccessToken;\n      if (accessToken != null) {\n        const response = axios.get('http://localhost:8080/api/auth/userByRefreshToken/', {\n          token: accessToken\n        });\n        console.log(response);\n\n        // const userId = response.data.id;\n        // const username = response.data.username;\n        // const email = response.data.email;\n\n        // this.$store.dispatch('authenticate', {\n        //   authenticated: true,\n        //   userId,\n        //   username,\n        //   email,\n        // });\n      }\n\n      next();\n    } else {\n      console.log(store.getters.getAccessToken);\n      alert('You need to log in first ðŸ¤“');\n      next('/sign-in');\n    }\n  }\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\ncreateApp(App).use(router).use(store).mount('#app');","map":{"version":3,"names":["createApp","App","createRouter","createWebHashHistory","store","ModalLogin","ModalRegister","HomeContent","ProfileContent","routes","path","component","meta","requiresAuth","beforeEnter","to","from","next","getters","isAuthenticated","accessToken","getAccessToken","response","axios","get","token","console","log","alert","router","history","use","mount"],"sources":["C:/Users/admin/source/repos/COMMAND/CPP_Lab08/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport { createRouter, createWebHashHistory } from 'vue-router'\r\nimport store from './store'\r\n\r\nimport ModalLogin from '@/./components/Authorization/ModalLogin.vue';\r\nimport ModalRegister from '@/./components/Authorization/ModalRegister.vue';\r\nimport HomeContent from '@/./components/Home/HomeContent.vue';\r\nimport ProfileContent from '@/./components/Profile/ProfileContent.vue';\r\n\r\nconst routes = [\r\n    { path: '/', component:  HomeContent},\r\n    { path: '/sign-in', component: ModalLogin },\r\n    { path: '/sign-up', component: ModalRegister },\r\n    { \r\n        path: '/profile', \r\n        component: ProfileContent,\r\n        meta: { requiresAuth: true },\r\n        beforeEnter: (to, from, next) => {\r\n          if (store.getters.isAuthenticated) {\r\n            let accessToken = store.getters.getAccessToken;\r\n            if(accessToken != null)\r\n            {\r\n                const response = axios.get('http://localhost:8080/api/auth/userByRefreshToken/', {\r\n                    token: accessToken,\r\n                });\r\n        \r\n                console.log(response);\r\n        \r\n                // const userId = response.data.id;\r\n                // const username = response.data.username;\r\n                // const email = response.data.email;\r\n        \r\n                // this.$store.dispatch('authenticate', {\r\n                //   authenticated: true,\r\n                //   userId,\r\n                //   username,\r\n                //   email,\r\n                // });\r\n              }\r\n            next(); \r\n          } else {\r\n            console.log( store.getters.getAccessToken  );\r\n            alert('You need to log in first ðŸ¤“');\r\n            next('/sign-in'); \r\n          }\r\n        },\r\n     },\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHashHistory(),\r\n    routes,\r\n});\r\n\r\n\r\ncreateApp(App)\r\n    .use(router)\r\n    .use(store)\r\n    .mount('#app')\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAC/D,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAOC,UAAU,MAAM,6CAA6C;AACpE,OAAOC,aAAa,MAAM,gDAAgD;AAC1E,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAOC,cAAc,MAAM,2CAA2C;AAEtE,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAGJ;AAAW,CAAC,EACrC;EAAEG,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEN;AAAW,CAAC,EAC3C;EAAEK,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL;AAAc,CAAC,EAC9C;EACII,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEH,cAAc;EACzBI,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC;EAC5BC,WAAW,EAAEA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAC/B,IAAIb,KAAK,CAACc,OAAO,CAACC,eAAe,EAAE;MACjC,IAAIC,WAAW,GAAGhB,KAAK,CAACc,OAAO,CAACG,cAAc;MAC9C,IAAGD,WAAW,IAAI,IAAI,EACtB;QACI,MAAME,QAAQ,GAAGC,KAAK,CAACC,GAAG,CAAC,oDAAoD,EAAE;UAC7EC,KAAK,EAAEL;QACX,CAAC,CAAC;QAEFM,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;;QAErB;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;MACF;;MACFL,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLS,OAAO,CAACC,GAAG,CAAEvB,KAAK,CAACc,OAAO,CAACG,cAAgB,CAAC;MAC5CO,KAAK,CAAC,6BAA6B,CAAC;MACpCX,IAAI,CAAC,UAAU,CAAC;IAClB;EACF;AACH,CAAC,CACL;AAED,MAAMY,MAAM,GAAG3B,YAAY,CAAC;EACxB4B,OAAO,EAAE3B,oBAAoB,CAAC,CAAC;EAC/BM;AACJ,CAAC,CAAC;AAGFT,SAAS,CAACC,GAAG,CAAC,CACT8B,GAAG,CAACF,MAAM,CAAC,CACXE,GAAG,CAAC3B,KAAK,CAAC,CACV4B,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}