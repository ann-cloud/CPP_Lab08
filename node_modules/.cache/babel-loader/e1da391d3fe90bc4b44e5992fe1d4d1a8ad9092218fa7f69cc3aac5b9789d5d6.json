{"ast":null,"code":"import { createStore } from 'vuex';\nconst store = createStore({\n  state() {\n    return {\n      authenticated: false,\n      userId: \"\",\n      username: \"\",\n      email: \"\",\n      accessToken: \"\"\n    };\n  },\n  mutations: {\n    setAuthenticated(state, value) {\n      state.authenticated = value;\n    },\n    setUserId(state, value) {\n      ocalStorage.setItem(\"userId\", value);\n      state.userId = value;\n    },\n    setUsername(state, value) {\n      state.username = value;\n    },\n    setEmail(state, value) {\n      state.email = value;\n    },\n    setAccessToken(state, value) {\n      localStorage.setItem(\"accessToken\", value);\n      state.accessToken = value;\n    }\n  },\n  actions: {\n    authenticate({\n      commit\n    }, {\n      authenticated,\n      userId,\n      username,\n      email,\n      accessToken\n    }) {\n      commit('setAuthenticated', authenticated);\n      commit('setUserId', userId);\n      commit('setUsername', username);\n      commit('setEmail', email);\n      commit('setAccessToken', accessToken);\n    }\n  },\n  getters: {\n    isAuthenticated: state => {\n      let userId = localStorage.getItem(\"userId\");\n      let tmpToken = localStorage.getItem(\"accessToken\");\n      if (userId != null && tmpToken != null && !state.authenticated) {\n        state.accessToken = tmpToken;\n        state.authenticated = true;\n      }\n      return state.authenticated;\n    },\n    getUserId: state => state.userId,\n    getUsername: state => state.username,\n    getEmail: state => state.email,\n    getAccessToken: state => {\n      let tmpToken = localStorage.getItem(\"accessToken\");\n      if (tmpToken != null) state.accessToken = tmpToken;\n      return state.accessToken;\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","authenticated","userId","username","email","accessToken","mutations","setAuthenticated","value","setUserId","ocalStorage","setItem","setUsername","setEmail","setAccessToken","localStorage","actions","authenticate","commit","getters","isAuthenticated","getItem","tmpToken","getUserId","getUsername","getEmail","getAccessToken"],"sources":["C:/Users/admin/source/repos/COMMAND/CPP_Lab08/src/store.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n    state() {\r\n      return {\r\n        authenticated: false,\r\n        userId: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        accessToken: \"\"\r\n      };\r\n    },\r\n    mutations: {\r\n      setAuthenticated(state, value) {\r\n        state.authenticated = value;\r\n      },\r\n      setUserId(state, value) {\r\n        ocalStorage.setItem(\"userId\", value);\r\n        state.userId = value;\r\n      },\r\n      setUsername(state, value) {\r\n        state.username = value;\r\n      },\r\n      setEmail(state, value)\r\n      {\r\n        state.email = value;\r\n      },\r\n      setAccessToken(state, value) {\r\n        localStorage.setItem(\"accessToken\", value);\r\n        state.accessToken = value;\r\n      }\r\n    },\r\n    actions: {\r\n        authenticate({ commit }, { authenticated, userId, username, email, accessToken }) {\r\n          commit('setAuthenticated', authenticated);\r\n          commit('setUserId', userId);\r\n          commit('setUsername', username);\r\n          commit('setEmail', email);\r\n          commit('setAccessToken', accessToken);\r\n        },\r\n      },\r\n    getters: {\r\n      isAuthenticated: (state) => {\r\n        let userId = localStorage.getItem(\"userId\");\r\n        let tmpToken = localStorage.getItem(\"accessToken\");\r\n\r\n        if(userId != null && tmpToken != null && !state.authenticated)\r\n        {\r\n            state.accessToken = tmpToken;\r\n            state.authenticated = true;\r\n            \r\n        }\r\n        return state.authenticated;\r\n      },\r\n      getUserId: (state) => state.userId,\r\n      getUsername: (state) => state.username,\r\n      getEmail: (state) => state.email,\r\n      getAccessToken: (state) => {\r\n        let tmpToken = localStorage.getItem(\"accessToken\");\r\n        if(tmpToken != null)\r\n          state.accessToken = tmpToken;\r\n        return state.accessToken;\r\n      }\r\n       \r\n    },\r\n  });  \r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACtBE,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACTC,gBAAgBA,CAACP,KAAK,EAAEQ,KAAK,EAAE;MAC7BR,KAAK,CAACC,aAAa,GAAGO,KAAK;IAC7B,CAAC;IACDC,SAASA,CAACT,KAAK,EAAEQ,KAAK,EAAE;MACtBE,WAAW,CAACC,OAAO,CAAC,QAAQ,EAAEH,KAAK,CAAC;MACpCR,KAAK,CAACE,MAAM,GAAGM,KAAK;IACtB,CAAC;IACDI,WAAWA,CAACZ,KAAK,EAAEQ,KAAK,EAAE;MACxBR,KAAK,CAACG,QAAQ,GAAGK,KAAK;IACxB,CAAC;IACDK,QAAQA,CAACb,KAAK,EAAEQ,KAAK,EACrB;MACER,KAAK,CAACI,KAAK,GAAGI,KAAK;IACrB,CAAC;IACDM,cAAcA,CAACd,KAAK,EAAEQ,KAAK,EAAE;MAC3BO,YAAY,CAACJ,OAAO,CAAC,aAAa,EAAEH,KAAK,CAAC;MAC1CR,KAAK,CAACK,WAAW,GAAGG,KAAK;IAC3B;EACF,CAAC;EACDQ,OAAO,EAAE;IACLC,YAAYA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEjB,aAAa;MAAEC,MAAM;MAAEC,QAAQ;MAAEC,KAAK;MAAEC;IAAY,CAAC,EAAE;MAChFa,MAAM,CAAC,kBAAkB,EAAEjB,aAAa,CAAC;MACzCiB,MAAM,CAAC,WAAW,EAAEhB,MAAM,CAAC;MAC3BgB,MAAM,CAAC,aAAa,EAAEf,QAAQ,CAAC;MAC/Be,MAAM,CAAC,UAAU,EAAEd,KAAK,CAAC;MACzBc,MAAM,CAAC,gBAAgB,EAAEb,WAAW,CAAC;IACvC;EACF,CAAC;EACHc,OAAO,EAAE;IACPC,eAAe,EAAGpB,KAAK,IAAK;MAC1B,IAAIE,MAAM,GAAGa,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAC;MAC3C,IAAIC,QAAQ,GAAGP,YAAY,CAACM,OAAO,CAAC,aAAa,CAAC;MAElD,IAAGnB,MAAM,IAAI,IAAI,IAAIoB,QAAQ,IAAI,IAAI,IAAI,CAACtB,KAAK,CAACC,aAAa,EAC7D;QACID,KAAK,CAACK,WAAW,GAAGiB,QAAQ;QAC5BtB,KAAK,CAACC,aAAa,GAAG,IAAI;MAE9B;MACA,OAAOD,KAAK,CAACC,aAAa;IAC5B,CAAC;IACDsB,SAAS,EAAGvB,KAAK,IAAKA,KAAK,CAACE,MAAM;IAClCsB,WAAW,EAAGxB,KAAK,IAAKA,KAAK,CAACG,QAAQ;IACtCsB,QAAQ,EAAGzB,KAAK,IAAKA,KAAK,CAACI,KAAK;IAChCsB,cAAc,EAAG1B,KAAK,IAAK;MACzB,IAAIsB,QAAQ,GAAGP,YAAY,CAACM,OAAO,CAAC,aAAa,CAAC;MAClD,IAAGC,QAAQ,IAAI,IAAI,EACjBtB,KAAK,CAACK,WAAW,GAAGiB,QAAQ;MAC9B,OAAOtB,KAAK,CAACK,WAAW;IAC1B;EAEF;AACF,CAAC,CAAC;AAEJ,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}