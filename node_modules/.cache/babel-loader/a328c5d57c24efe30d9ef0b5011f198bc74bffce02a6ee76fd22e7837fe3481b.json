{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport BuildingBuildView from '../Builds/BuildingBuildView';\nexport default {\n  components: {\n    BuildingBuildView\n  },\n  props: {\n    buildingId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      address: \"some address\",\n      isVisible: true,\n      buildingApartments: []\n    };\n  },\n  methods: {\n    closeModal() {\n      this.isVisible = false;\n      this.$emit('closeBuildingModal');\n    },\n    async fetchData() {\n      try {\n        const responseBuildingsyUserId = await axios.get(\"http://localhost:8080/api/data/buildings/getBuildingById/\" + this.buildingId, {\n          headers: {\n            \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n          }\n        });\n        const userId = this.$store.getters.getUserId;\n        const responseApartmentsByUserId = await axios.get('http://localhost:8080/api/data/apartments/getApartmentsByUserId/' + userId, {\n          headers: {\n            \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n          }\n        });\n        console.log(responseApartmentsByUserId);\n        let userApartmentsIds = responseApartmentsByUserId.data.map(x => x.id);\n        let apartmentsSortedFloors = responseBuildingsyUserId.data.apartments.slice().sort((a, b) => a.id - b.id).map(apartment => {\n          const sortedFloors = apartment.floors.slice().sort((floorA, floorB) => floorB.number - floorA.number);\n          let isUsersApartments = userApartmentsIds.includes(apartment.id);\n          return {\n            ...apartment,\n            sortedFloors,\n            isUsersApartments\n          };\n        });\n        console.log(apartmentsSortedFloors);\n        this.buildingApartments = apartmentsSortedFloors;\n      } catch (error) {\n        alert('Fetching building data failed');\n        console.error('Error fetching building data:', error);\n        this.$router.push('/profile');\n      }\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","BuildingBuildView","components","props","buildingId","type","Number","required","data","address","isVisible","buildingApartments","methods","closeModal","$emit","fetchData","responseBuildingsyUserId","get","headers","$store","getters","getAccessToken","userId","getUserId","responseApartmentsByUserId","console","log","userApartmentsIds","map","x","id","apartmentsSortedFloors","apartments","slice","sort","a","b","apartment","sortedFloors","floors","floorA","floorB","number","isUsersApartments","includes","error","alert","$router","push","mounted"],"sources":["C:\\Users\\admin\\source\\repos\\COMMAND\\CPP_Lab08\\src\\components\\Profile\\ViewBuildingModal.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal\" v-if=\"isVisible\">\r\n    <div class=\"modal-background\" @click=\"closeModal\"></div>\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <div class=\"modal-header\">\r\n          <button class=\"close-button\" @click=\"closeModal\">&times;</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <h1 style=\"text-align: center;\"><strong>{{ `Building ${buildingId}` }}</strong></h1>\r\n        <h3><strong>Address: {{ address }}</strong></h3>\r\n        <div class=\"building-content\">\r\n          <div class=\"building-info\">\r\n            <!-- Iterate through apartments -->\r\n            <div class=\"apartments\">\r\n              <div v-for=\"(apartment, apartmentIndex) in buildingApartments\" :key=\"apartmentIndex\">\r\n                <h2>Apartment {{ apartmentIndex + 1 }}:</h2>\r\n\r\n                <!-- Iterate through floors in the apartment -->\r\n                <div v-for=\"(floor, floorIndex) in apartment.floors\" :key=\"floorIndex\">\r\n                  <h3>Floor {{ floorIndex + 1 }}:</h3>\r\n\r\n                  <!-- Iterate through rooms on the floor -->\r\n                  <div v-for=\"(room, roomIndex) in floor.rooms\" :key=\"roomIndex\">\r\n                    <h4>Room {{ roomIndex + 1 }}:</h4>\r\n\r\n                    <!-- Display room details -->\r\n                    <ul>\r\n                      <li>Number of doors: {{ room.doors }}</li>\r\n                      <li>Number of windows: {{ room.windows }}</li>\r\n                      <li>Number of controllers: {{ room.controllers }}</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"building-info\" style=\"padding-top: 2vh; padding-bottom: 2vh;\">\r\n            <BuildingBuildView style=\"width: 100vh;\" :buildingApartments=\"buildingApartments\"></BuildingBuildView>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport BuildingBuildView from '../Builds/BuildingBuildView';\r\n\r\nexport default {\r\n  components: {\r\n    BuildingBuildView\r\n  },\r\n  props: {\r\n    buildingId: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      address: \"some address\",\r\n      isVisible: true,\r\n      buildingApartments: []\r\n    };\r\n  },\r\n  methods: {\r\n    closeModal() {\r\n      this.isVisible = false;\r\n      this.$emit('closeBuildingModal');\r\n    },\r\n    async fetchData() {\r\n      try {\r\n        const responseBuildingsyUserId = await axios.get(\"http://localhost:8080/api/data/buildings/getBuildingById/\" + this.buildingId,\r\n          {\r\n            headers:\r\n            {\r\n              \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\r\n            }\r\n          });\r\n\r\n        const userId = this.$store.getters.getUserId;\r\n        const responseApartmentsByUserId = await axios.get('http://localhost:8080/api/data/apartments/getApartmentsByUserId/' + userId,\r\n          {\r\n            headers:\r\n            {\r\n              \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\r\n            }\r\n          });\r\n\r\n        console.log(responseApartmentsByUserId);\r\n\r\n        let userApartmentsIds = responseApartmentsByUserId.data.map(x => x.id);\r\n\r\n        let apartmentsSortedFloors = responseBuildingsyUserId.data.apartments.slice().sort((a, b) => a.id - b.id).map(apartment => {\r\n          const sortedFloors = apartment.floors.slice().sort((floorA, floorB) => floorB.number - floorA.number);\r\n          \r\n          let isUsersApartments = userApartmentsIds.includes(apartment.id);\r\n          return { ...apartment, sortedFloors, isUsersApartments };\r\n        });\r\n\r\n        \r\n\r\n        console.log(apartmentsSortedFloors);\r\n\r\n        this.buildingApartments = apartmentsSortedFloors;\r\n\r\n      } catch (error) {\r\n        alert('Fetching building data failed');\r\n        console.error('Error fetching building data:', error);\r\n\r\n        this.$router.push('/profile');\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.building-info {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  background-color: #9197AE;\r\n  border-radius: 5px;\r\n  padding: 0px 40px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  color: white;\r\n  margin-right: 20px;\r\n}\r\n\r\nul {\r\n  text-align: left;\r\n}\r\n\r\n.building-content {\r\n  display: flex;\r\n}\r\n\r\nimg,\r\n.building-scheme {\r\n  height: 400px;\r\n}\r\n\r\n.info-group {\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  flex-direction: row;\r\n  font-size: large;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-background {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.modal-content {\r\n  background-color: #EFF6EE;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\r\n  z-index: 10;\r\n  height: 600px;\r\n  padding-bottom: 50px;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.close-button {\r\n  font-size: 24px;\r\n  /* Adjust the font size as needed */\r\n  cursor: pointer;\r\n  border: none;\r\n  background: none;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n}\r\n</style>\r\n  "],"mappings":";AAgDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,iBAAgB,MAAO,6BAA6B;AAE3D,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,cAAc;MACvBC,SAAS,EAAE,IAAI;MACfC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACH,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACI,KAAK,CAAC,oBAAoB,CAAC;IAClC,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,wBAAuB,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,2DAA0D,GAAI,IAAI,CAACb,UAAU,EAC5H;UACEc,OAAO,EACP;YACE,eAAe,EAAG,UAAS,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,cAAe;UAChE;QACF,CAAC,CAAC;QAEJ,MAAMC,MAAK,GAAI,IAAI,CAACH,MAAM,CAACC,OAAO,CAACG,SAAS;QAC5C,MAAMC,0BAAyB,GAAI,MAAMxB,KAAK,CAACiB,GAAG,CAAC,kEAAiE,GAAIK,MAAM,EAC5H;UACEJ,OAAO,EACP;YACE,eAAe,EAAG,UAAS,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,cAAe;UAChE;QACF,CAAC,CAAC;QAEJI,OAAO,CAACC,GAAG,CAACF,0BAA0B,CAAC;QAEvC,IAAIG,iBAAgB,GAAIH,0BAA0B,CAAChB,IAAI,CAACoB,GAAG,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAE,CAAC;QAEtE,IAAIC,sBAAqB,GAAIf,wBAAwB,CAACR,IAAI,CAACwB,UAAU,CAACC,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACL,EAAC,GAAIM,CAAC,CAACN,EAAE,CAAC,CAACF,GAAG,CAACS,SAAQ,IAAK;UACzH,MAAMC,YAAW,GAAID,SAAS,CAACE,MAAM,CAACN,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACM,MAAM,EAAEC,MAAM,KAAKA,MAAM,CAACC,MAAK,GAAIF,MAAM,CAACE,MAAM,CAAC;UAErG,IAAIC,iBAAgB,GAAIhB,iBAAiB,CAACiB,QAAQ,CAACP,SAAS,CAACP,EAAE,CAAC;UAChE,OAAO;YAAE,GAAGO,SAAS;YAAEC,YAAY;YAAEK;UAAkB,CAAC;QAC1D,CAAC,CAAC;QAIFlB,OAAO,CAACC,GAAG,CAACK,sBAAsB,CAAC;QAEnC,IAAI,CAACpB,kBAAiB,GAAIoB,sBAAsB;MAElD,EAAE,OAAOc,KAAK,EAAE;QACdC,KAAK,CAAC,+BAA+B,CAAC;QACtCrB,OAAO,CAACoB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QAErD,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;MAC/B;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClC,SAAS,CAAC,CAAC;EAClB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}