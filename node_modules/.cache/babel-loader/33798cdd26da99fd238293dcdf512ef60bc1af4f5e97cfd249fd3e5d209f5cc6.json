{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7686dbf7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"buildings-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BuildingItem = _resolveComponent(\"BuildingItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.buildings, building => {\n    return _openBlock(), _createBlock(_component_BuildingItem, {\n      key: building.id,\n      buildingId: building.id,\n      apartmentsCount: building.apartments.length\n    }, null, 8 /* PROPS */, [\"buildingId\", \"apartmentsCount\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","buildings","building","_createBlock","_component_BuildingItem","key","id","buildingId","apartmentsCount","apartments","length"],"sources":["C:\\Users\\admin\\source\\repos\\COMMAND\\CPP_Lab08\\src\\components\\Profile\\BuildingsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"buildings-list\">\r\n    <BuildingItem v-for=\"building in buildings\" :key=\"building.id\"\r\n      :buildingId=\"building.id\" :apartmentsCount=\"building.apartments.length\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BuildingItem from \"./BuildingItem.vue\";\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    BuildingItem,\r\n  },\r\n  name: 'BuildingListComponent',\r\n  data() {\r\n    return {\r\n      buildings: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async getBuildingsOfUser() {\r\n      try {\r\n        const userId = this.$store.getters.getUserId;\r\n        const promise = axios.get('http://localhost:8080/api/data/buildings/getBuildingsByUserId/' + userId,\r\n          {\r\n            headers:\r\n            {\r\n              \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\r\n            }\r\n          });\r\n\r\n          promise.then((response) => {\r\n            this.buildings = response.data;\r\n            this.numberOfBuildings = this.buildings.length;\r\n          })\r\n      } catch (error) {\r\n        alert('Building fetch failed!');\r\n        console.error('Error fetching buildings:', error.response.data.message);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getBuildingsOfUser();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.buildings-list {\r\n  background-color: #9197AE;\r\n  border-radius: 5px;\r\n  padding: 40px;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  margin-right: 60px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;;uBAA3BC,mBAAA,CAGM,OAHNC,UAGM,I,kBAFJD,mBAAA,CAC2EE,SAAA,QAAAC,WAAA,CAD1CC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAA7BC,YAAA,CAC2EC,uBAAA;MAD9BC,GAAG,EAAEH,QAAQ,CAACI,EAAE;MAC1DC,UAAU,EAAEL,QAAQ,CAACI,EAAE;MAAGE,eAAe,EAAEN,QAAQ,CAACO,UAAU,CAACC"},"metadata":{},"sourceType":"module","externalDependencies":[]}