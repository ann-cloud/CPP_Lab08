{"ast":null,"code":"import BuildingItem from \"./BuildingItem.vue\";\nimport axios from 'axios';\nexport default {\n  components: {\n    BuildingItem\n  },\n  name: 'BuildingListComponent',\n  data() {\n    return {\n      buildings: []\n    };\n  },\n  methods: {\n    async getBuildingsOfUser() {\n      try {\n        const userId = this.$store.getters.getUserId;\n        axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('accessToken')}`;\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\n          const promise = axios.get('http://localhost:8080/api/auth/users/' + userId);\n          promise.then(response => {\n            this.buildings = response.data.buildings;\n          });\n        }\n      } catch (error) {\n        alert('Building fetch failed!');\n        console.error('Error fetching buildings:', error.response.data.message);\n      }\n    }\n  },\n  created() {\n    this.getBuildingsOfUser();\n  }\n};","map":{"version":3,"names":["BuildingItem","axios","components","name","data","buildings","methods","getBuildingsOfUser","userId","$store","getters","getUserId","defaults","headers","common","localStorage","getItem","undefined","isNaN","promise","get","then","response","error","alert","console","message","created"],"sources":["C:\\Users\\admin\\source\\repos\\COMMAND\\CPP_Lab08\\src\\components\\Profile\\BuildingsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"buildings-list\">\r\n    <BuildingItem v-for=\"building in buildings\" :key=\"building.id\"\r\n      :buildingId=\"building.id\" :apartmentsCount=\"building.apartments.length\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BuildingItem from \"./BuildingItem.vue\";\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    BuildingItem,\r\n  },\r\n  name: 'BuildingListComponent',\r\n  data() {\r\n    return {\r\n      buildings: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async getBuildingsOfUser() {\r\n      try {\r\n        const userId = this.$store.getters.getUserId;\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('accessToken')}`;\r\n\r\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\r\n          const promise = axios.get('http://localhost:8080/api/auth/users/' + userId);\r\n\r\n          promise.then((response) => {\r\n            this.buildings = response.data.buildings;\r\n          })\r\n        }\r\n      } catch (error) {\r\n        alert('Building fetch failed!');\r\n        console.error('Error fetching buildings:', error.response.data.message);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getBuildingsOfUser();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.buildings-list {\r\n  background-color: #9197AE;\r\n  border-radius: 5px;\r\n  padding: 40px;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  margin-right: 60px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n}\r\n</style>\r\n"],"mappings":"AAQA,OAAOA,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAI,EAAE,uBAAuB;EAC7BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,SAAS;QAC5CV,KAAK,CAACW,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAK,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC;QAEhG,IAAIR,MAAK,KAAMS,SAAQ,IAAK,CAACC,KAAK,CAACV,MAAM,KAAKA,MAAK,IAAK,IAAI,EAAE;UAC5D,MAAMW,OAAM,GAAIlB,KAAK,CAACmB,GAAG,CAAC,uCAAsC,GAAIZ,MAAM,CAAC;UAE3EW,OAAO,CAACE,IAAI,CAAEC,QAAQ,IAAK;YACzB,IAAI,CAACjB,SAAQ,GAAIiB,QAAQ,CAAClB,IAAI,CAACC,SAAS;UAC1C,CAAC;QACH;MACF,EAAE,OAAOkB,KAAK,EAAE;QACdC,KAAK,CAAC,wBAAwB,CAAC;QAC/BC,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACD,QAAQ,CAAClB,IAAI,CAACsB,OAAO,CAAC;MACzE;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,kBAAkB,CAAC,CAAC;EAC3B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}