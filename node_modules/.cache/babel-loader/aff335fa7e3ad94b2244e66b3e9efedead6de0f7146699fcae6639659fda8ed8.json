{"ast":null,"code":"import BuildingsList from './BuildingsList.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    BuildingsList\n  },\n  name: 'ProfileContentComponent',\n  data() {\n    return {\n      email: this.$store.getters.getEmail,\n      numberOfBuildings: '',\n      showModal: false\n    };\n  },\n  methods: {\n    async getNumberOfBuildingsOfUser() {\n      try {\n        const userId = this.$store.getters.getUserId;\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\n          const promise = axios.get('http://localhost:8080/api/data/buildings/getBuildingsByUserId/' + userId, {\n            headers: {\n              \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n            }\n          });\n          promise.then(response => {\n            this.buildings = response.data;\n            this.numberOfBuildings = this.buildings.length;\n          });\n        }\n      } catch (error) {\n        alert('Building count fetch failed!');\n        console.error('Error fetching buildings:', error.response.data.message);\n      }\n    }\n  },\n  created() {\n    this.getNumberOfBuildingsOfUser();\n  }\n};","map":{"version":3,"names":["BuildingsList","axios","components","name","data","email","$store","getters","getEmail","numberOfBuildings","showModal","methods","getNumberOfBuildingsOfUser","userId","getUserId","undefined","isNaN","promise","get","headers","getAccessToken","then","response","buildings","length","error","alert","console","message","created"],"sources":["/Users/annasuslova/Desktop/CPP_Lab08-zhemga/src/components/Profile/ProfileContent.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-content\">\r\n    <div class=\"add-building-btn\">\r\n    </div>\r\n    <div class=\"user-content\">\r\n      <div class=\"user-info\">\r\n        <h2>Information about user</h2>\r\n        <div class=\"info-group\">\r\n            <p><strong>Email:</strong></p> \r\n            <p>{{ email }}</p> \r\n        </div>\r\n        <div class=\"info-group\">\r\n            <p><strong>Number of buildings:</strong></p> \r\n            <p>{{ numberOfBuildings }}</p>\r\n        </div>\r\n      </div>\r\n      <BuildingsList />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BuildingsList from './BuildingsList.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    BuildingsList,\r\n  },\r\n  name: 'ProfileContentComponent',\r\n  data() {\r\n    return {\r\n      email: this.$store.getters.getEmail,\r\n      numberOfBuildings: '',\r\n      showModal: false,\r\n    }\r\n  },\r\n  methods: {\r\n    async getNumberOfBuildingsOfUser() {\r\n      try {    \r\n        const userId = this.$store.getters.getUserId;\r\n\r\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\r\n          const promise = axios.get('http://localhost:8080/api/data/buildings/getBuildingsByUserId/' + userId,\r\n          {\r\n            headers:\r\n            {\r\n              \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\r\n            }\r\n          });\r\n\r\n          promise.then((response) => {\r\n            this.buildings = response.data;\r\n            this.numberOfBuildings = this.buildings.length;\r\n          })\r\n        }\r\n      } catch (error) {\r\n        alert('Building count fetch failed!');\r\n        console.error('Error fetching buildings:', error.response.data.message);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getNumberOfBuildingsOfUser();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.user-content\r\n{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.add-building-btn\r\n{\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding: 40px 60px;\r\n}\r\n\r\n.add-building-btn button\r\n{\r\n  background-color: #417B5A;\r\n  border: 0.5px solid rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n  padding: 20px 30px;\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-building-btn button:hover {\r\n  background-color: #45a049;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3); /* Shadow on hover */\r\n}\r\n.info-group\r\n{\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  flex-direction: row;\r\n  font-size: large;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n}\r\n\r\n.user-info {\r\n  background-color: #9197AE;\r\n  border-radius: 5px;\r\n  padding: 20px 40px;\r\n  width: 100%;\r\n  max-width: 300px; \r\n  margin: 0px 60px; \r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.user-info h2 {\r\n  text-align: center;\r\n  color: #ffffff;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAsBA,OAAOA,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAI,EAAE,yBAAyB;EAC/BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,QAAQ;MACnCC,iBAAiB,EAAE,EAAE;MACrBC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,0BAA0BA,CAAA,EAAG;MACjC,IAAI;QACF,MAAMC,MAAK,GAAI,IAAI,CAACP,MAAM,CAACC,OAAO,CAACO,SAAS;QAE5C,IAAID,MAAK,KAAME,SAAQ,IAAK,CAACC,KAAK,CAACH,MAAM,KAAKA,MAAK,IAAK,IAAI,EAAE;UAC5D,MAAMI,OAAM,GAAIhB,KAAK,CAACiB,GAAG,CAAC,gEAA+D,GAAIL,MAAM,EACnG;YACEM,OAAO,EACP;cACE,eAAe,EAAG,UAAS,IAAI,CAACb,MAAM,CAACC,OAAO,CAACa,cAAe;YAChE;UACF,CAAC,CAAC;UAEFH,OAAO,CAACI,IAAI,CAAEC,QAAQ,IAAK;YACzB,IAAI,CAACC,SAAQ,GAAID,QAAQ,CAAClB,IAAI;YAC9B,IAAI,CAACK,iBAAgB,GAAI,IAAI,CAACc,SAAS,CAACC,MAAM;UAChD,CAAC;QACH;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,KAAK,CAAC,8BAA8B,CAAC;QACrCC,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACH,QAAQ,CAAClB,IAAI,CAACwB,OAAO,CAAC;MACzE;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjB,0BAA0B,CAAC,CAAC;EACnC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}