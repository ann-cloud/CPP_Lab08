{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e91b350c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"simulation-content\"\n};\nconst _hoisted_2 = {\n  class: \"simulation-map\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"simulation-buttons\"\n};\nconst _hoisted_5 = {\n  class: \"simulation-info\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AlertPopup = _resolveComponent(\"AlertPopup\");\n  const _component_SimulationInfo = _resolveComponent(\"SimulationInfo\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    id: \"startBtn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startSimulation && $options.startSimulation(...args))\n  }, \"Start\"), _createElementVNode(\"button\", {\n    id: \"pauseBtn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handlePause && $options.handlePause(...args))\n  }, _toDisplayString($data.operation), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"stopBtn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.stopSimulation && $options.stopSimulation(...args))\n  }, \"Stop\")])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [$data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"Received message: \" + _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_AlertPopup)])]), _createVNode(_component_SimulationInfo)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$options","startSimulation","handlePause","$data","operation","stopSimulation","_hoisted_5","message","_createElementBlock","_hoisted_6","_toDisplayString","_createVNode","_component_AlertPopup","_component_SimulationInfo"],"sources":["/Users/annasuslova/Desktop/CPP_Lab08-zhemga/src/components/Simulation/SimulationContent.vue"],"sourcesContent":["<template>\n  <div class=\"simulation-content\">\n    <div class=\"simulation-map\">\n      <div id=\"map\"></div>\n      <div class=\"simulation-buttons\">\n        <button id=\"startBtn\" @click=\"startSimulation\">Start</button>\n        <button id=\"pauseBtn\" @click=\"handlePause\">{{ operation }}</button>\n        <button id=\"stopBtn\" @click=\"stopSimulation\">Stop</button>\n      </div>\n    </div>\n    <div class=\"simulation-info\">\n      <div>\n        <p v-if=\"message\">Received message: {{ message }}</p>\n      </div>\n      <AlertPopup />\n    </div>\n  </div>\n  <SimulationInfo></SimulationInfo>\n</template>\n\n<script>\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport markerIcon from '@/assets/img/location.png';\nimport SimulationInfo from './SimulationInfo.vue';\nimport AlertPopup from './AlertPopup.vue';\nimport io from 'socket.io-client';\n\nexport default {\n  name: \"SimulationContent\",\n  components: {\n    SimulationInfo,\n    AlertPopup\n  },\n  data() {\n    return {\n      map: null,\n      operation: \"Pause\",\n      buildings: [],\n      message: null,\n    };\n  },\n  methods: {\n    async getBuildingsOfUser() {\n      try {\n        const userId = this.$store.getters.getUserId;\n\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\n          const promise = axios.get('http://localhost:8080/api/data/buildings/getBuildingsByUserId/' + userId,\n            {\n              headers: {\n                \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n              }\n            });\n\n          promise.then((response) => {\n            this.buildings = response.data;\n            this.updateMap();\n          });\n        }\n      } catch (error) {\n        alert('Building fetch failed!');\n        console.error('Error fetching buildings:', error.response.data.message);\n      }\n    },\n    handlePause() {\n      if (this.operation == \"Pause\") {\n        this.pauseSimulation();\n      }\n      else {\n        this.resumeSimulation();\n      }\n    },\n    async startSimulation() {\n      try {\n        const userId = this.$store.getters.getUserId;\n\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\n          const promise = axios.post('http://localhost:8080/api/data/simulation',\n            {\n              headers:\n              {\n                \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n              }\n            });\n\n          promise.then((response) => {\n            alert(response.data);\n          })\n        }\n      } catch (error) {\n        alert('Simulation start failed!');\n        console.error('Error starting simulation:', error.response.data.message);\n      }\n    },\n    async pauseSimulation() {\n      try {\n        const userId = this.$store.getters.getUserId;\n\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\n          const promise = axios.patch('http://localhost:8080/api/data/simulation/pause',\n            {\n              headers:\n              {\n                \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n              }\n            });\n\n          promise.then((response) => {\n            alert(response.data);\n            this.operation = \"Resume\";\n          })\n        }\n      } catch (error) {\n        alert('Simulation pause failed!');\n        console.error('Error pausing simulation:', error.response.data.message);\n      }\n    },\n    async resumeSimulation() {\n      try {\n        const userId = this.$store.getters.getUserId;\n\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\n          const promise = axios.patch('http://localhost:8080/api/data/simulation/resume',\n            {\n              headers:\n              {\n                \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n              }\n            });\n\n          promise.then((response) => {\n            alert(response.data);\n            this.operation = \"Pause\";\n          })\n        }\n      } catch (error) {\n        alert('Simulation resume failed!');\n        console.error('Error resuming simulation:', error.response.data.message);\n      }\n    },\n    async stopSimulation() {\n      try {\n        const userId = this.$store.getters.getUserId;\n\n        if (userId !== undefined && !isNaN(userId) && userId != null) {\n          const promise = axios.patch('http://localhost:8080/api/data/simulation/stop',\n            {\n              headers:\n              {\n                \"Authorization\": `Bearer ${this.$store.getters.getAccessToken}`\n              }\n            });\n\n          promise.then((response) => {\n            alert(response.data);\n          })\n        }\n      } catch (error) {\n        alert('Simulation stop failed!');\n        console.error('Error stopping simulation:', error.response.data.message);\n      }\n    },\n    updateMap() {\n      this.map.eachLayer(layer => {\n        if (layer instanceof L.Marker) {\n          this.map.removeLayer(layer);\n        }\n      });\n\n      const locationIcon = L.icon({\n        iconUrl: markerIcon,\n        iconSize: [32, 32],\n        iconAnchor: [16, 32],\n        popupAnchor: [0, -32],\n      });\n\n      this.buildings.forEach(building => {\n        L.marker([building.coordinateX, building.coordinateY], { icon: locationIcon })\n          .addTo(this.map)\n          .bindPopup(`<b>Building ${building.id}</b><br>${building.address}`);\n      });\n    },\n  },\n  mounted() {\n\n    this.map = L.map('map').setView([0, 0], 2);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Â© OpenStreetMap contributors'\n    }).addTo(this.map);\n\n    this.getBuildingsOfUser();\n    const socket = io('http://localhost:4004');\n\n    socket.on('info', (data) => {\n      this.message = data;\n    });\n\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n    });\n\n    socket.on('error', (error) => {\n      console.error('Socket error:', error);\n    });\n  },\n};\n</script>\n\n<style scoped>\n.simulation-buttons {\n  display: flex;\n  justify-content: space-around;\n}\n\n.simulation-buttons button {\n  padding: 20px 40px;\n  font-weight: bold;\n  font-size: 16px;\n  color: white;\n  background-color: #417B5A;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  border: none;\n}\n\n#stopBtn {\n  background-color: #e70e0e;\n}\n\n#pauseBtn {\n  background-color: #f2ec38;\n  color: black;\n}\n\n.simulation-buttons button:hover {\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n  background-color: #4d906a;\n}\n\n.simulation-content {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 70px;\n}\n\n.simulation-info {\n  background-color: #9197AE;\n  padding: 20px 70px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  max-height: 500px;\n  overflow-y: auto;\n}\n\n#map {\n  height: 500px;\n  width: 500px;\n  border: 1px solid black;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  margin-bottom: 30px\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAoB;EAAfC,EAAE,EAAC;AAAK;;EACRF,KAAK,EAAC;AAAoB;;EAM5BA,KAAK,EAAC;AAAiB;;;;;;;6DAT9BC,mBAAA,CAeM,OAfNE,UAeM,GAdJF,mBAAA,CAOM,OAPNG,UAOM,GANJC,UAAoB,EACpBJ,mBAAA,CAIM,OAJNK,UAIM,GAHJL,mBAAA,CAA6D;IAArDC,EAAE,EAAC,UAAU;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,OAAK,GACpDR,mBAAA,CAAmE;IAA3DC,EAAE,EAAC,UAAU;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,WAAA,IAAAF,QAAA,CAAAE,WAAA,IAAAH,IAAA,CAAW;sBAAKI,KAAA,CAAAC,SAAS,kBACvDb,mBAAA,CAA0D;IAAlDC,EAAE,EAAC,SAAS;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAK,cAAA,IAAAL,QAAA,CAAAK,cAAA,IAAAN,IAAA,CAAc;KAAE,MAAI,E,KAGrDR,mBAAA,CAKM,OALNe,UAKM,GAJJf,mBAAA,CAEM,cADKY,KAAA,CAAAI,OAAO,I,cAAhBC,mBAAA,CAAqD,KAAAC,UAAA,EAAnC,oBAAkB,GAAAC,gBAAA,CAAGP,KAAA,CAAAI,OAAO,oB,qCAEhDI,YAAA,CAAcC,qBAAA,E,KAGlBD,YAAA,CAAiCE,yBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}